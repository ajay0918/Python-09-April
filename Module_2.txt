                                     Module 2 Assignment

Q1 - Write a Python program to check if a number is positive, negative or zero.
Ans :
num = int(input("Enter number : "))
if num > 0:
    print("Positive number")
elif num == 0:
      print("It's Zero number")
else:
    print("Negative number") 

Q2 - Write a Python program to get the Factorial number of given number.
Ans :
num = int(input("Enter a number: "))
factorial = 1
if num < 0:
	print(" Factorial does not exist for negative numbers")
elif num == 0:
	print("The factorial of 0 is 1")
else:
       for i in range(1,num + 1):
    	factorial = factorial*i
       print("The factorial of", num, "is", factorial)

Q3 - Write a Python program to get the Fibonacci series of given range.

Ans : 
a = 1
b = 0
print (b)
print(a)
for i in range(0,100):
     c = b
     b = a
     a = c + b
print(a)

Q4 - How memory is managed inPython?
Ans : (i) Memory management in python is managed by Python private heap space.
 (ii) The allocation of heap space for Python objects is done by Python's memory      manager.
 (iii) Python also has an inbuilt garbage collector, which recycles all the unused memory and so that it can be made available to the heap space.

Q5 - What is the purpose of continue statement in python?
Ans : The continue statement gives you the option to skip over the part of a loop where an external condition is triggered, but to go on to complete the rest of the loop. That is, the current iteration of the loop will be disrupted, but the program will return to the top of the loop.

Q6 - Write python program that swap two number with temp variable and without temp variable.
Ans :
int1 = int(input("Enter first number: "))
int2 = int(input("Enter second number: "))
print('Old value of int1 is {0} and int2 is {1}'.format(int1, int2))
int1 = int1 + int2
int2 = int1 - int2
int1 = int1 - int2
print('New value of int1 is {0} and int2 is {1}'.format(int1, int2))

Q7 - Write a Python program to find whether a given number is even or odd, print out an appropriate message to the user.
Ans :
num = int(input("Enter number : "))
if num%2 == 0:
      print("given number is Even")
else:
      print("given number is odd")

Q8 - Write a Python program to test whether a passed letter is a vowel or not ?
Ans : 
l = input("Input a letter of the alphabet: ")
if l in ('a', 'e', 'i', 'o', 'u'):
    print("%s is a vowel." % l)
elif l == 'y':
    print("Sometimes letter y stand for vowel, sometimes stand for consonant.")
else: 
    print("%s is a consonant." % l)

Q9 - Write a Python program to sum of three given integers.However, if two values are equal sum will be zero.
Ans : def sum_three(x, y, z):
	if x == y or y == z or x==z:
        	sum = 0
	else:
        	sum = x + y + z
        	return sum
print(sum_three(2, 1, 2))
print(sum_three(3, 2, 2))
print(sum_three(2, 2, 2))
print(sum_three(1, 2, 3))

Q10 - Write a Python program that will return true if the two given integer values are equal or their sum or difference is 5.
Ans :
def test_number5(x, y):
	if x == y or abs(x-y) == 5 or (x+y) == 5:
    	return True
	else:
    	return False
print(test_number5(7, 2))
print(test_number5(3, 2))
print(test_number5(2, 2))
print(test_number5(7, 3))
print(test_number5(27, 53))

Q11 - Write a python program to sum of the first n positive integers.

Ans :
n = int(input("Input a number: "))
sum_num = (n * (n + 1)) / 2
print("Sum of the first", n ,"positive integers:", sum_num)

Q12 - Write a Python program to calculate the length of a string.
Ans :
str = input("Enter a string: ")
print("Length of the input string is:", len(str)) 

Q13 - Write a Python program to count the number of characters (character frequency) in a string.
Ans : 
def char_frequency(str1):
     dict = {}
     for n in str1:
         keys = dict.keys()
         if n in keys:
        	dict[n] += 1
         else:
        	dict[n] = 1
         return dict
print(char_frequency('google.com'))

Q14 - What are negative indexes and why are they used ?
Ans : Python programming language supports negative indexing of arrays, something which is not available in arrays in most other programming languages. This means that the index value of -1 gives the last element, and -2 gives the second last element of an array. The negative indexing starts from where the array ends.

Q15 - Write a Python program to count occurrences of a substring in a string.
Ans :
str1 = 'The quick brown fox jumps over the lazy dog.'
print()
print(str1.count("fox"))
print()

Q16 - Write a Python program to count the occurrences of each word in a given sentence ?
Ans : 
def word_count(str):
	counts = dict()
	words = str.split()
	for word in words:
    	     if word in counts:
                    counts[word] += 1
    	    else:
                    counts[word] = 1
          return counts
print( word_count('the quick brown fox jumps over the lazy dog.'))

Q17 - Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string.
Ans : 

def chars_mix_up(a, b):
	new_a = b[:2] + a[2:]
	new_b = a[:2] + b[2:]
	return new_a + ' ' + new_b
print(chars_mix_up('abc', 'xyz'))

Q18 - Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead if the string length of the given string is less than 3, leave it unchanged.
Ans : 
def add_string(str1):
      length = len(str1)
      if length > 2:
         if str1[-3:] == 'ing':
        	str1 += 'ly'
         else:
        	str1 += 'ing'
       return str1
print(add_string('ab'))
print(add_string('abc'))
print(add_string('string'))

Q19 - Write a Python program to find the first appearance of the substring 'not' and 'poor' froma given string, if 'not' follows the 'poor', replace the whole 'not'...'poor'substring with 'good'. Return the resulting string.
Ans : 
def not_poor(str1):
     snot = str1.find('not')
    spoor = str1.find('poor')
    if spoor > snot and snot>0 and spoor>0:
    	str1 = str1.replace(str1[snot:(spoor+4)], 'good')
    	return str1
    else:
    	return str1
print(not_poor('The lyrics is not that poor!'))
print(not_poor('The lyrics is poor!'))

Q19 - Write a Python function that takes a list of words and returns the length of the longest one.
Ans : 
def find_longest_word(words_list):
      word_len = []
      for n in words_list:
           word_len.append((len(n), n))
     word_len.sort()
     return word_len[-1][0], word_len[-1][1]
result = find_longest_word(["PHP", "Exercises", "Backend"])
print("\nLongest word: ",result[1])
print("Length of the longest word: ",result[0])

Q20 - Write a Python function to reverses a string if its length is a multiple of 4.
Ans : 
def reverse_string(str1):
      if len(str1) % 4 == 0:
    	return ''.join(reversed(str1))
      return str1
print(reverse_string('abcd'))
print(reverse_string('python'))

Q21 - Write a Python program to get a string made of the first 2 and the last 2 chars from a given a string. If the string length is less than 2,return instead of the empty string
Ans : 
def string_both_ends(str):
      if len(str) < 2:
    	return ''
      return str[0:2] + str[-2:]
print(string_both_ends('w3resource'))
print(string_both_ends('w3'))
print(string_both_ends('w'))

Q22 - Write a Python function to insert a string in the middle of a string.
Ans :
def insert_sting_middle(str, word):
      return str[:2] + word + str[2:]
print(insert_sting_middle('[[]]', 'Python'))
print(insert_sting_middle('{{}}', 'PHP'))
print(insert_sting_middle('<<>>', 'HTML'))

